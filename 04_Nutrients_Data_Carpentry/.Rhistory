library(plyr)
library(dplyr)
handling_loss_data <- read.csv("handling_loss_SI_03Dec2020.csv")
handling_loss_data$mass_lost_g <- ((handling_loss_data$DM_start_g)-(handling_loss_data$DM_end_g))
handling_loss_data$percent_mass_lost <- (100*(handling_loss_data$mass_lost_g/handling_loss_data$DM_start_g))
handling_loss_data$prop_sample_afdm <- (1-(handling_loss_data$ash_g/handling_loss_data$subsample_g))
handling_loss_data$afdm <- (handling_loss_data$prop_sample_afdm*handling_loss_data$DM_end_g) #why do we apply this to the final DM and not the initial DM?
handling_loss_data_rhodo <- handling_loss_data[which(handling_loss_data$rhodo_acer=="R"),]
handling_loss_data_acer <- handling_loss_data[which(handling_loss_data$rhodo_acer=="A"),]
avg_handling_loss_rhodo_g <- mean(handling_loss_data_rhodo$mass_lost_g)
avg_handling_loss_acer_g <- mean(handling_loss_data_acer$mass_lost_g)
corr_factor_rhodo_afdm_start <- mean(handling_loss_data_rhodo$prop_sample_afdm)
corr_factor_acer_afdm_start <- mean(handling_loss_data_acer$prop_sample_afdm)
coarse_mesh_data_yr2 <- read.csv("coarse_SI_YR2_11Dec2020.csv")
coarse_mesh_data_yr2$date_dep <- as.Date(strptime(coarse_mesh_data_yr2$date_dep,format=("%m/%d/%y"))) #only works if I change the columns in Excel to date format...no clue why this is a thing
coarse_mesh_data_yr2$date_coll <- as.Date(strptime(coarse_mesh_data_yr2$date_coll,format=("%m/%d/%y"))) #same comment as above
#corrections based on Handling Loss
coarse_mesh_data_yr2$DM_start_handloss_g <- with(coarse_mesh_data_yr2, ifelse(rhodo_acer %in% "R",(DM_start_g-avg_handling_loss_rhodo_g), DM_start_g-avg_handling_loss_acer_g))
coarse_mesh_data_yr2$afdm_start <- with(coarse_mesh_data_yr2, ifelse(rhodo_acer %in% "R",(DM_start_handloss_g*corr_factor_rhodo_afdm_start), DM_start_handloss_g*corr_factor_acer_afdm_start))
#Get %AFDM remaining - first have to get the proportion of the sample that was AFDM, then apply this to the final dry mass, then divide this by the starting AFDM and multiply by 100
coarse_mesh_data_yr2$prop_sample_afdm <- 1-((coarse_mesh_data_yr2$tin_ash_g-coarse_mesh_data_yr2$tin_g)/(coarse_mesh_data_yr2$tin_DM_g-coarse_mesh_data_yr2$tin_g))
coarse_mesh_data_yr2$afdm_final <- coarse_mesh_data_yr2$prop_sample_afdm*coarse_mesh_data_yr2$DM_end_g
coarse_mesh_data_yr2$percent_afdm_rem_C <- 100*(coarse_mesh_data_yr2$afdm_final/coarse_mesh_data_yr2$afdm_start)
coarse_mesh_data_yr2$bag_n <- substring(coarse_mesh_data_yr2$bag_ID,2,5) #this is so I can merge coarse and fine by bag #
fine_mesh_data_yr2 <- read.csv("fine_SI_YR2_11Dec2020.csv")
fine_mesh_data_yr2$date_dep <- as.Date(strptime(fine_mesh_data_yr2$date_dep,format=("%m/%d/%y"))) #only works if I change the columns in Excel to date format...no clue why this is a thing
fine_mesh_data_yr2$date_coll <- as.Date(strptime(fine_mesh_data_yr2$date_coll,format=("%m/%d/%y"))) #same comment as above
fine_mesh_data_yr2$afdm_start <- with(fine_mesh_data_yr2, ifelse(rhodo_acer %in% "R",(DM_start_g*corr_factor_rhodo_afdm_start), DM_start_g*corr_factor_acer_afdm_start))
FB_sample_weights <- read.csv("FB _SI_YR2_Cummins_sample_weights_only_11Dec2020.csv")
FB_sample_weights <- FB_sample_weights[-c(441),] #remove random row of NAs in the FB data
colnames(FB_sample_weights)[colnames(FB_sample_weights)=="dm_g"]<-"DM_sub_g"
FB_sample_weights$date_dep <- as.Date(strptime(FB_sample_weights$date_dep,format=("%m/%d/%y")))#only works if I change the columns in Excel to date format...no clue why this is a thing
FB_sample_weights$date_coll <- as.Date(strptime(FB_sample_weights$date_coll,format=("%m/%d/%y")))#same comment as above
#subsetting by species -- mostly just to isolate the rhodo data
fine_mesh_data_yr2_rhodo <- fine_mesh_data_yr2[which(fine_mesh_data_yr2$rhodo_acer=="R"),]
fine_mesh_data_yr2_acer <- fine_mesh_data_yr2[which(fine_mesh_data_yr2$rhodo_acer=="A"),]
#creating the dataframe where I will do the calculations to get final AFDM for the rhodo samples
rhodo_FB_calcs <- merge(fine_mesh_data_yr2_rhodo, FB_sample_weights, by = c("bag_ID", "stream", "date_dep", "date_coll"))
rhodo_FB_calcs <- rhodo_FB_calcs[order(rhodo_FB_calcs[,3]),]
rhodo_FB_calcs$DM_leaves_final <- rhodo_FB_calcs$tin_DM_g-rhodo_FB_calcs$tin_g
rhodo_FB_calcs$afdm_leaves_final <- rhodo_FB_calcs$tin_DM_g-rhodo_FB_calcs$tin_ash_g
#calculation for percent of the DM that was AFDM for the leaves we weighed in the rosemond lab
rhodo_FB_calcs$prop_sample_afdm <- rhodo_FB_calcs$afdm_leaves_final/rhodo_FB_calcs$DM_leaves_final
#getting a column for the AFDM of the subsample based on the column created in the previous line of code ("prop_sample_AFDM")
rhodo_FB_calcs$afdm_sub_final <- rhodo_FB_calcs$DM_sub_g*rhodo_FB_calcs$prop_sample_afdm
rhodo_FB_calcs$afdm_final <- rhodo_FB_calcs$afdm_sub_final+rhodo_FB_calcs$afdm_leaves_final
rhodo_FB_calcs$afdm_final[is.na(rhodo_FB_calcs$afdm_final)] <- rhodo_FB_calcs$afdm_leaves_final
#next step is to create a sub dataframe from rhodo_FB_calcs that has only the things I need -- merge this with the acer dataframe, then proceed from there! First need to make sure acer dataframe and rhodo dataframe have all the same things in them, though (incl afdm_final which you may have to calculate separately for the acer df before you merge).
View(rhodo_FB_calcs)
setwd("~/Documents/Dissertation etc./Data/Serial Incubations/Litter breakdown")
library(plyr)
library(dplyr)
handling_loss_data <- read.csv("handling_loss_SI_03Dec2020.csv")
handling_loss_data$mass_lost_g <- ((handling_loss_data$DM_start_g)-(handling_loss_data$DM_end_g))
handling_loss_data$percent_mass_lost <- (100*(handling_loss_data$mass_lost_g/handling_loss_data$DM_start_g))
handling_loss_data$prop_sample_afdm <- (1-(handling_loss_data$ash_g/handling_loss_data$subsample_g))
handling_loss_data$afdm <- (handling_loss_data$prop_sample_afdm*handling_loss_data$DM_end_g) #why do we apply this to the final DM and not the initial DM?
handling_loss_data_rhodo <- handling_loss_data[which(handling_loss_data$rhodo_acer=="R"),]
handling_loss_data_acer <- handling_loss_data[which(handling_loss_data$rhodo_acer=="A"),]
avg_handling_loss_rhodo_g <- mean(handling_loss_data_rhodo$mass_lost_g)
avg_handling_loss_acer_g <- mean(handling_loss_data_acer$mass_lost_g)
corr_factor_rhodo_afdm_start <- mean(handling_loss_data_rhodo$prop_sample_afdm)
corr_factor_acer_afdm_start <- mean(handling_loss_data_acer$prop_sample_afdm)
coarse_mesh_data_yr2 <- read.csv("coarse_SI_YR2_11Dec2020.csv")
coarse_mesh_data_yr2$date_dep <- as.Date(strptime(coarse_mesh_data_yr2$date_dep,format=("%m/%d/%y"))) #only works if I change the columns in Excel to date format...no clue why this is a thing
coarse_mesh_data_yr2$date_coll <- as.Date(strptime(coarse_mesh_data_yr2$date_coll,format=("%m/%d/%y"))) #same comment as above
#corrections based on Handling Loss
coarse_mesh_data_yr2$DM_start_handloss_g <- with(coarse_mesh_data_yr2, ifelse(rhodo_acer %in% "R",(DM_start_g-avg_handling_loss_rhodo_g), DM_start_g-avg_handling_loss_acer_g))
coarse_mesh_data_yr2$afdm_start <- with(coarse_mesh_data_yr2, ifelse(rhodo_acer %in% "R",(DM_start_handloss_g*corr_factor_rhodo_afdm_start), DM_start_handloss_g*corr_factor_acer_afdm_start))
#Get %AFDM remaining - first have to get the proportion of the sample that was AFDM, then apply this to the final dry mass, then divide this by the starting AFDM and multiply by 100
coarse_mesh_data_yr2$prop_sample_afdm <- 1-((coarse_mesh_data_yr2$tin_ash_g-coarse_mesh_data_yr2$tin_g)/(coarse_mesh_data_yr2$tin_DM_g-coarse_mesh_data_yr2$tin_g))
coarse_mesh_data_yr2$afdm_final <- coarse_mesh_data_yr2$prop_sample_afdm*coarse_mesh_data_yr2$DM_end_g
coarse_mesh_data_yr2$percent_afdm_rem_C <- 100*(coarse_mesh_data_yr2$afdm_final/coarse_mesh_data_yr2$afdm_start)
coarse_mesh_data_yr2$bag_n <- substring(coarse_mesh_data_yr2$bag_ID,2,5) #this is so I can merge coarse and fine by bag #
fine_mesh_data_yr2 <- read.csv("fine_SI_YR2_11Dec2020.csv")
fine_mesh_data_yr2$date_dep <- as.Date(strptime(fine_mesh_data_yr2$date_dep,format=("%m/%d/%y"))) #only works if I change the columns in Excel to date format...no clue why this is a thing
fine_mesh_data_yr2$date_coll <- as.Date(strptime(fine_mesh_data_yr2$date_coll,format=("%m/%d/%y"))) #same comment as above
fine_mesh_data_yr2$afdm_start <- with(fine_mesh_data_yr2, ifelse(rhodo_acer %in% "R",(DM_start_g*corr_factor_rhodo_afdm_start), DM_start_g*corr_factor_acer_afdm_start))
FB_sample_weights <- read.csv("FB _SI_YR2_Cummins_sample_weights_only_11Dec2020.csv")
FB_sample_weights <- FB_sample_weights[-c(441),] #remove random row of NAs in the FB data
colnames(FB_sample_weights)[colnames(FB_sample_weights)=="dm_g"]<-"DM_sub_g"
FB_sample_weights$date_dep <- as.Date(strptime(FB_sample_weights$date_dep,format=("%m/%d/%y")))#only works if I change the columns in Excel to date format...no clue why this is a thing
FB_sample_weights$date_coll <- as.Date(strptime(FB_sample_weights$date_coll,format=("%m/%d/%y")))#same comment as above
#subsetting by species -- mostly just to isolate the rhodo data
fine_mesh_data_yr2_rhodo <- fine_mesh_data_yr2[which(fine_mesh_data_yr2$rhodo_acer=="R"),]
fine_mesh_data_yr2_acer <- fine_mesh_data_yr2[which(fine_mesh_data_yr2$rhodo_acer=="A"),]
#creating the dataframe where I will do the calculations to get final AFDM for the rhodo samples
rhodo_FB_calcs <- merge(fine_mesh_data_yr2_rhodo, FB_sample_weights, by = c("bag_ID", "stream", "date_dep", "date_coll"))
rhodo_FB_calcs <- rhodo_FB_calcs[order(rhodo_FB_calcs[,3]),]
rhodo_FB_calcs$DM_leaves_final <- rhodo_FB_calcs$tin_DM_g-rhodo_FB_calcs$tin_g
rhodo_FB_calcs$afdm_leaves_final <- rhodo_FB_calcs$tin_DM_g-rhodo_FB_calcs$tin_ash_g
#calculation for percent of the DM that was AFDM for the leaves we weighed in the rosemond lab
rhodo_FB_calcs$prop_sample_afdm <- rhodo_FB_calcs$afdm_leaves_final/rhodo_FB_calcs$DM_leaves_final
#getting a column for the AFDM of the subsample based on the column created in the previous line of code ("prop_sample_AFDM")
rhodo_FB_calcs$afdm_sub_final <- rhodo_FB_calcs$DM_sub_g*rhodo_FB_calcs$prop_sample_afdm
rhodo_FB_calcs$afdm_final <- rhodo_FB_calcs$afdm_sub_final+rhodo_FB_calcs$afdm_leaves_final
View(rhodo_FB_calcs)
0.8036+0.16689868
0.05090031+0.8211
0.11188997+0.8304
rhodo_FB_calcs$afdm_final <- ifelse(is.na(rhodo_FB_calcs$afdm_sub_final), rhodo_FB_calcs$afdm_leaves_final, (rhodo_FB_calcs$afdm_sub_final+rhodo_FB_calcs$afdm_leaves_final))
setwd("~/Documents/Dissertation etc./Data/Serial Incubations/Litter breakdown")
library(plyr)
library(dplyr)
handling_loss_data <- read.csv("handling_loss_SI_03Dec2020.csv")
handling_loss_data$mass_lost_g <- ((handling_loss_data$DM_start_g)-(handling_loss_data$DM_end_g))
handling_loss_data$percent_mass_lost <- (100*(handling_loss_data$mass_lost_g/handling_loss_data$DM_start_g))
handling_loss_data$prop_sample_afdm <- (1-(handling_loss_data$ash_g/handling_loss_data$subsample_g))
handling_loss_data$afdm <- (handling_loss_data$prop_sample_afdm*handling_loss_data$DM_end_g) #why do we apply this to the final DM and not the initial DM?
handling_loss_data_rhodo <- handling_loss_data[which(handling_loss_data$rhodo_acer=="R"),]
handling_loss_data_acer <- handling_loss_data[which(handling_loss_data$rhodo_acer=="A"),]
avg_handling_loss_rhodo_g <- mean(handling_loss_data_rhodo$mass_lost_g)
avg_handling_loss_acer_g <- mean(handling_loss_data_acer$mass_lost_g)
corr_factor_rhodo_afdm_start <- mean(handling_loss_data_rhodo$prop_sample_afdm)
corr_factor_acer_afdm_start <- mean(handling_loss_data_acer$prop_sample_afdm)
coarse_mesh_data_yr2 <- read.csv("coarse_SI_YR2_11Dec2020.csv")
coarse_mesh_data_yr2$date_dep <- as.Date(strptime(coarse_mesh_data_yr2$date_dep,format=("%m/%d/%y"))) #only works if I change the columns in Excel to date format...no clue why this is a thing
coarse_mesh_data_yr2$date_coll <- as.Date(strptime(coarse_mesh_data_yr2$date_coll,format=("%m/%d/%y"))) #same comment as above
#corrections based on Handling Loss
coarse_mesh_data_yr2$DM_start_handloss_g <- with(coarse_mesh_data_yr2, ifelse(rhodo_acer %in% "R",(DM_start_g-avg_handling_loss_rhodo_g), DM_start_g-avg_handling_loss_acer_g))
coarse_mesh_data_yr2$afdm_start <- with(coarse_mesh_data_yr2, ifelse(rhodo_acer %in% "R",(DM_start_handloss_g*corr_factor_rhodo_afdm_start), DM_start_handloss_g*corr_factor_acer_afdm_start))
#Get %AFDM remaining - first have to get the proportion of the sample that was AFDM, then apply this to the final dry mass, then divide this by the starting AFDM and multiply by 100
coarse_mesh_data_yr2$prop_sample_afdm <- 1-((coarse_mesh_data_yr2$tin_ash_g-coarse_mesh_data_yr2$tin_g)/(coarse_mesh_data_yr2$tin_DM_g-coarse_mesh_data_yr2$tin_g))
coarse_mesh_data_yr2$afdm_final <- coarse_mesh_data_yr2$prop_sample_afdm*coarse_mesh_data_yr2$DM_end_g
coarse_mesh_data_yr2$percent_afdm_rem_C <- 100*(coarse_mesh_data_yr2$afdm_final/coarse_mesh_data_yr2$afdm_start)
coarse_mesh_data_yr2$bag_n <- substring(coarse_mesh_data_yr2$bag_ID,2,5) #this is so I can merge coarse and fine by bag #
fine_mesh_data_yr2 <- read.csv("fine_SI_YR2_11Dec2020.csv")
fine_mesh_data_yr2$date_dep <- as.Date(strptime(fine_mesh_data_yr2$date_dep,format=("%m/%d/%y"))) #only works if I change the columns in Excel to date format...no clue why this is a thing
fine_mesh_data_yr2$date_coll <- as.Date(strptime(fine_mesh_data_yr2$date_coll,format=("%m/%d/%y"))) #same comment as above
fine_mesh_data_yr2$afdm_start <- with(fine_mesh_data_yr2, ifelse(rhodo_acer %in% "R",(DM_start_g*corr_factor_rhodo_afdm_start), DM_start_g*corr_factor_acer_afdm_start))
FB_sample_weights <- read.csv("FB _SI_YR2_Cummins_sample_weights_only_11Dec2020.csv")
FB_sample_weights <- FB_sample_weights[-c(441),] #remove random row of NAs in the FB data
colnames(FB_sample_weights)[colnames(FB_sample_weights)=="dm_g"]<-"DM_sub_g"
FB_sample_weights$date_dep <- as.Date(strptime(FB_sample_weights$date_dep,format=("%m/%d/%y")))#only works if I change the columns in Excel to date format...no clue why this is a thing
FB_sample_weights$date_coll <- as.Date(strptime(FB_sample_weights$date_coll,format=("%m/%d/%y")))#same comment as above
#subsetting by species -- mostly just to isolate the rhodo data
fine_mesh_data_yr2_rhodo <- fine_mesh_data_yr2[which(fine_mesh_data_yr2$rhodo_acer=="R"),]
fine_mesh_data_yr2_acer <- fine_mesh_data_yr2[which(fine_mesh_data_yr2$rhodo_acer=="A"),]
#creating the dataframe where I will do the calculations to get final AFDM for the rhodo samples
rhodo_FB_calcs <- merge(fine_mesh_data_yr2_rhodo, FB_sample_weights, by = c("bag_ID", "stream", "date_dep", "date_coll"))
rhodo_FB_calcs <- rhodo_FB_calcs[order(rhodo_FB_calcs[,3]),]
rhodo_FB_calcs$DM_leaves_final <- rhodo_FB_calcs$tin_DM_g-rhodo_FB_calcs$tin_g
rhodo_FB_calcs$afdm_leaves_final <- rhodo_FB_calcs$tin_DM_g-rhodo_FB_calcs$tin_ash_g
#calculation for percent of the DM that was AFDM for the leaves we weighed in the rosemond lab
rhodo_FB_calcs$prop_sample_afdm <- rhodo_FB_calcs$afdm_leaves_final/rhodo_FB_calcs$DM_leaves_final
#getting a column for the AFDM of the subsample based on the column created in the previous line of code ("prop_sample_AFDM")
rhodo_FB_calcs$afdm_sub_final <- rhodo_FB_calcs$DM_sub_g*rhodo_FB_calcs$prop_sample_afdm
rhodo_FB_calcs$afdm_final <- ifelse(is.na(rhodo_FB_calcs$afdm_sub_final), rhodo_FB_calcs$afdm_leaves_final, (rhodo_FB_calcs$afdm_sub_final+rhodo_FB_calcs$afdm_leaves_final))
#next step is to create a sub dataframe from rhodo_FB_calcs that has only the things I need -- merge this with the acer dataframe, then proceed from there! First need to make sure acer dataframe and rhodo dataframe have all the same things in them, though (incl afdm_final which you may have to calculate separately for the acer df before you merge).
View(rhodo_FB_calcs)
View(handling_loss_data)
setwd("~/Documents/Dissertation etc./Data/Serial Incubations/Litter breakdown")
library(plyr)
library(dplyr)
handling_loss_data <- read.csv("handling_loss_SI_03Dec2020.csv")
handling_loss_data$mass_lost_g <- ((handling_loss_data$DM_start_g)-(handling_loss_data$DM_end_g))
handling_loss_data$percent_mass_lost <- (100*(handling_loss_data$mass_lost_g/handling_loss_data$DM_start_g))
handling_loss_data$prop_sample_afdm <- (1-(handling_loss_data$ash_g/handling_loss_data$subsample_g))
handling_loss_data$afdm <- (handling_loss_data$prop_sample_afdm*handling_loss_data$DM_end_g) #why do we apply this to the final DM and not the initial DM?
handling_loss_data_rhodo <- handling_loss_data[which(handling_loss_data$rhodo_acer=="R"),]
handling_loss_data_acer <- handling_loss_data[which(handling_loss_data$rhodo_acer=="A"),]
avg_handling_loss_rhodo_g <- mean(handling_loss_data_rhodo$mass_lost_g)
avg_handling_loss_acer_g <- mean(handling_loss_data_acer$mass_lost_g)
corr_factor_rhodo_afdm_start <- mean(handling_loss_data_rhodo$prop_sample_afdm)
corr_factor_acer_afdm_start <- mean(handling_loss_data_acer$prop_sample_afdm)
coarse_mesh_data_yr1 <- read.csv("coarse_SI_YR1_03Dec2020.csv")
coarse_mesh_data_yr1$date_dep <- as.Date(strptime(coarse_mesh_data_yr1$date_dep,format=("%m/%d/%y"))) #only works if I change the columns in Excel to date format...no clue why this is a thing
coarse_mesh_data_yr1$date_coll <- as.Date(strptime(coarse_mesh_data_yr1$date_coll,format=("%m/%d/%y"))) #same comment as above
#corrections based on Handling Loss
coarse_mesh_data_yr1$DM_start_handloss_g <- with(coarse_mesh_data_yr1, ifelse(rhodo_acer %in% "R",(DM_start_g-avg_handling_loss_rhodo_g), DM_start_g-avg_handling_loss_acer_g))
coarse_mesh_data_yr1$afdm_start <- with(coarse_mesh_data_yr1, ifelse(rhodo_acer %in% "R",(DM_start_handloss_g*corr_factor_rhodo_afdm_start), DM_start_handloss_g*corr_factor_acer_afdm_start))
#Get %AFDM remaining - first have to get the proportion of the sample that was AFDM, then apply this to the final dry mass, then divide this by the starting AFDM and multiply by 100
coarse_mesh_data_yr1$prop_sample_afdm <- 1-((coarse_mesh_data_yr1$tin_ash_g-coarse_mesh_data_yr1$tin_g)/(coarse_mesh_data_yr1$tin_DM_g-coarse_mesh_data_yr1$tin_g))
coarse_mesh_data_yr1$afdm_final <- coarse_mesh_data_yr1$prop_sample_afdm*coarse_mesh_data_yr1$DM_end_g
coarse_mesh_data_yr1$percent_afdm_rem_C <- 100*(coarse_mesh_data_yr1$afdm_final/coarse_mesh_data_yr1$afdm_start)
coarse_mesh_data_yr1$bag_n <- substring(coarse_mesh_data_yr1$bag_ID,2,5) #this is so I can merge coarse and fine by bag #
fine_mesh_data_yr1 <- read.csv("fine_SI_YR1_03Dec2020.csv")
fine_mesh_data_yr1$date_dep <- as.Date(strptime(fine_mesh_data_yr1$date_dep,format=("%m/%d/%y"))) #only works if I change the columns in Excel to date format...no clue why this is a thing
fine_mesh_data_yr1$date_coll <- as.Date(strptime(fine_mesh_data_yr1$date_coll,format=("%m/%d/%y"))) #same comment as above
fine_mesh_data_yr1$afdm_start <- with(fine_mesh_data_yr1, ifelse(rhodo_acer %in% "R",(DM_start_g*corr_factor_rhodo_afdm_start), DM_start_g*corr_factor_acer_afdm_start))
#Get %AFDM remaining - first have to get final AFDM which for fine mesh is just the final dry mass minus the ash (this is because there is no subsampling for fine mesh because we are able to put the whole sample in the tin and ash it). Then, we get the percent AFDM remaining by dividing the final AFDM by the starting AFDM pand multiplying by 100
fine_mesh_data_yr1$afdm_final <- (fine_mesh_data_yr1$tin_DM_g-fine_mesh_data_yr1$tin_ash_g)
fine_mesh_data_yr1$percent_afdm_rem_F <- 100*(fine_mesh_data_yr1$afdm_final/fine_mesh_data_yr1$afdm_start)
fine_mesh_data_yr1$bag_n <- substring(fine_mesh_data_yr1$bag_ID,2,5) #this is so I can merge coarse and fine by bag #
coarse_mesh_data_yr1_sub <- coarse_mesh_data_yr1[, c("bag_n", "rhodo_acer", "date_dep", "date_coll", "stream", "percent_afdm_rem_C")]
fine_mesh_data_yr1_sub <- fine_mesh_data_yr1[, c("bag_n", "rhodo_acer", "date_dep", "date_coll", "stream", "percent_afdm_rem_F")]
coarse_fine_data_yr1_all<-merge(coarse_mesh_data_yr1_sub,fine_mesh_data_yr1_sub, by=c("bag_n","rhodo_acer", "date_dep", "date_coll", "stream"))
coarse_fine_data_yr1_all <- coarse_fine_data_yr1_all[order(coarse_fine_data_yr1_all[,3]),]
View(coarse_fine_data_yr1_all)
setwd("~/Documents/Dissertation etc./Data/Serial Incubations/Litter breakdown")
library(plyr)
library(dplyr)
handling_loss_data <- read.csv("handling_loss_SI_03Dec2020.csv")
handling_loss_data$mass_lost_g <- ((handling_loss_data$DM_start_g)-(handling_loss_data$DM_end_g))
handling_loss_data$percent_mass_lost <- (100*(handling_loss_data$mass_lost_g/handling_loss_data$DM_start_g))
handling_loss_data$prop_sample_afdm <- (1-(handling_loss_data$ash_g/handling_loss_data$subsample_g))
handling_loss_data$afdm <- (handling_loss_data$prop_sample_afdm*handling_loss_data$DM_end_g) #why do we apply this to the final DM and not the initial DM?
handling_loss_data_rhodo <- handling_loss_data[which(handling_loss_data$rhodo_acer=="R"),]
handling_loss_data_acer <- handling_loss_data[which(handling_loss_data$rhodo_acer=="A"),]
avg_handling_loss_rhodo_g <- mean(handling_loss_data_rhodo$mass_lost_g)
avg_handling_loss_acer_g <- mean(handling_loss_data_acer$mass_lost_g)
corr_factor_rhodo_afdm_start <- mean(handling_loss_data_rhodo$prop_sample_afdm)
corr_factor_acer_afdm_start <- mean(handling_loss_data_acer$prop_sample_afdm)
coarse_mesh_data_yr2 <- read.csv("coarse_SI_YR2_11Dec2020.csv")
coarse_mesh_data_yr2$date_dep <- as.Date(strptime(coarse_mesh_data_yr2$date_dep,format=("%m/%d/%y"))) #only works if I change the columns in Excel to date format...no clue why this is a thing
coarse_mesh_data_yr2$date_coll <- as.Date(strptime(coarse_mesh_data_yr2$date_coll,format=("%m/%d/%y"))) #same comment as above
#corrections based on Handling Loss
coarse_mesh_data_yr2$DM_start_handloss_g <- with(coarse_mesh_data_yr2, ifelse(rhodo_acer %in% "R",(DM_start_g-avg_handling_loss_rhodo_g), DM_start_g-avg_handling_loss_acer_g))
coarse_mesh_data_yr2$afdm_start <- with(coarse_mesh_data_yr2, ifelse(rhodo_acer %in% "R",(DM_start_handloss_g*corr_factor_rhodo_afdm_start), DM_start_handloss_g*corr_factor_acer_afdm_start))
#Get %AFDM remaining - first have to get the proportion of the sample that was AFDM, then apply this to the final dry mass, then divide this by the starting AFDM and multiply by 100
coarse_mesh_data_yr2$prop_sample_afdm <- 1-((coarse_mesh_data_yr2$tin_ash_g-coarse_mesh_data_yr2$tin_g)/(coarse_mesh_data_yr2$tin_DM_g-coarse_mesh_data_yr2$tin_g))
coarse_mesh_data_yr2$afdm_final <- coarse_mesh_data_yr2$prop_sample_afdm*coarse_mesh_data_yr2$DM_end_g
coarse_mesh_data_yr2$percent_afdm_rem_C <- 100*(coarse_mesh_data_yr2$afdm_final/coarse_mesh_data_yr2$afdm_start)
coarse_mesh_data_yr2$bag_n <- substring(coarse_mesh_data_yr2$bag_ID,2,5) #this is so I can merge coarse and fine by bag #
fine_mesh_data_yr2 <- read.csv("fine_SI_YR2_11Dec2020.csv")
fine_mesh_data_yr2$date_dep <- as.Date(strptime(fine_mesh_data_yr2$date_dep,format=("%m/%d/%y"))) #only works if I change the columns in Excel to date format...no clue why this is a thing
fine_mesh_data_yr2$date_coll <- as.Date(strptime(fine_mesh_data_yr2$date_coll,format=("%m/%d/%y"))) #same comment as above
fine_mesh_data_yr2$afdm_start <- with(fine_mesh_data_yr2, ifelse(rhodo_acer %in% "R",(DM_start_g*corr_factor_rhodo_afdm_start), DM_start_g*corr_factor_acer_afdm_start))
FB_sample_weights <- read.csv("FB _SI_YR2_Cummins_sample_weights_only_11Dec2020.csv")
FB_sample_weights <- FB_sample_weights[-c(441),] #remove random row of NAs in the FB data
colnames(FB_sample_weights)[colnames(FB_sample_weights)=="dm_g"]<-"DM_sub_g"
FB_sample_weights$date_dep <- as.Date(strptime(FB_sample_weights$date_dep,format=("%m/%d/%y")))#only works if I change the columns in Excel to date format...no clue why this is a thing
FB_sample_weights$date_coll <- as.Date(strptime(FB_sample_weights$date_coll,format=("%m/%d/%y")))#same comment as above
#subsetting by species -- mostly just to isolate the rhodo data
fine_mesh_data_yr2_rhodo <- fine_mesh_data_yr2[which(fine_mesh_data_yr2$rhodo_acer=="R"),]
fine_mesh_data_yr2_acer <- fine_mesh_data_yr2[which(fine_mesh_data_yr2$rhodo_acer=="A"),]
#creating the dataframe where I will do the calculations to get final AFDM for the rhodo samples
rhodo_FB_calcs <- merge(fine_mesh_data_yr2_rhodo, FB_sample_weights, by = c("bag_ID", "stream", "date_dep", "date_coll"))
rhodo_FB_calcs <- rhodo_FB_calcs[order(rhodo_FB_calcs[,3]),]
rhodo_FB_calcs$DM_leaves_final <- rhodo_FB_calcs$tin_DM_g-rhodo_FB_calcs$tin_g
rhodo_FB_calcs$afdm_leaves_final <- rhodo_FB_calcs$tin_DM_g-rhodo_FB_calcs$tin_ash_g
#calculation for percent of the DM that was AFDM for the leaves we weighed in the rosemond lab
rhodo_FB_calcs$prop_sample_afdm <- rhodo_FB_calcs$afdm_leaves_final/rhodo_FB_calcs$DM_leaves_final
#getting a column for the AFDM of the subsample based on the column created in the previous line of code ("prop_sample_AFDM")
rhodo_FB_calcs$afdm_sub_final <- rhodo_FB_calcs$DM_sub_g*rhodo_FB_calcs$prop_sample_afdm
rhodo_FB_calcs$afdm_final <- ifelse(is.na(rhodo_FB_calcs$afdm_sub_final), rhodo_FB_calcs$afdm_leaves_final, (rhodo_FB_calcs$afdm_sub_final+rhodo_FB_calcs$afdm_leaves_final))
#next step is to create a sub dataframe from rhodo_FB_calcs that has only the things I need -- merge this with the acer dataframe, then proceed from there! First need to make sure acer dataframe and rhodo dataframe have all the same things in them, though (incl afdm_final which you may have to calculate separately for the acer df before you merge).
#Get Acer AFDM final
View(fine_mesh_data_yr2_rhodo)
View(fine_mesh_data_yr2_acer)
#Get Acer AFDM final
fine_mesh_data_yr2_acer$afdm_final <- fine_mesh_data_yr2_acer$tin_DM_g-fine_mesh_data_yr2_acer$tin_ash_g
View(rhodo_FB_calcs)
4.2756-3.6956
fine_mesh_data_yr2_acer$percent_afdm_rem_F <- (100*(fine_mesh_data_yr2_acer$afdm_final/fine_mesh_data_yr2_acer$afdm_start))
#Get percent AFDM rem for the rhodo FM data
rhodo_FB_calcs$percent_afdm_rem_F <- (100*(rhodo_FB_calcs$afdm_final/rhodo_FB_calcs$afdm_start))
#subset of rhodo_FB_calcs with only the necessary data
rhodo_FB_calcs_sub <- rhodo_FB_calcs[, c("bag_n", "rhodo_acer", "date_dep", "date_coll", "stream", "percent_afdm_rem_F")]
#subset of rhodo_FB_calcs with only the necessary data
rhodo_FB_calcs_sub <- rhodo_FB_calcs[, c("bag_ID", "rhodo_acer", "date_dep", "date_coll", "stream", "percent_afdm_rem_F")]
#Get Acer AFDM final
fine_mesh_data_yr2_acer$afdm_final <- fine_mesh_data_yr2_acer$tin_DM_g-fine_mesh_data_yr2_acer$tin_ash_g
fine_mesh_data_yr2_acer$percent_afdm_rem_F <- (100*(fine_mesh_data_yr2_acer$afdm_final/fine_mesh_data_yr2_acer$afdm_start))
fine_mesh_data_yr2_acer$percent_afdm_rem_F <- (100*(fine_mesh_data_yr2_acer$afdm_final/fine_mesh_data_yr2_acer$afdm_start))
#Get Acer AFDM final
fine_mesh_data_yr2_acer$afdm_final <- fine_mesh_data_yr2_acer$tin_DM_g-fine_mesh_data_yr2_acer$tin_ash_g
setwd("~/Documents/Dissertation etc./Data/Serial Incubations/Litter breakdown")
library(plyr)
library(dplyr)
handling_loss_data <- read.csv("handling_loss_SI_03Dec2020.csv")
handling_loss_data$mass_lost_g <- ((handling_loss_data$DM_start_g)-(handling_loss_data$DM_end_g))
handling_loss_data$percent_mass_lost <- (100*(handling_loss_data$mass_lost_g/handling_loss_data$DM_start_g))
handling_loss_data$prop_sample_afdm <- (1-(handling_loss_data$ash_g/handling_loss_data$subsample_g))
handling_loss_data$afdm <- (handling_loss_data$prop_sample_afdm*handling_loss_data$DM_end_g) #why do we apply this to the final DM and not the initial DM?
handling_loss_data_rhodo <- handling_loss_data[which(handling_loss_data$rhodo_acer=="R"),]
handling_loss_data_acer <- handling_loss_data[which(handling_loss_data$rhodo_acer=="A"),]
avg_handling_loss_rhodo_g <- mean(handling_loss_data_rhodo$mass_lost_g)
avg_handling_loss_acer_g <- mean(handling_loss_data_acer$mass_lost_g)
corr_factor_rhodo_afdm_start <- mean(handling_loss_data_rhodo$prop_sample_afdm)
corr_factor_acer_afdm_start <- mean(handling_loss_data_acer$prop_sample_afdm)
coarse_mesh_data_yr2 <- read.csv("coarse_SI_YR2_11Dec2020.csv")
coarse_mesh_data_yr2$date_dep <- as.Date(strptime(coarse_mesh_data_yr2$date_dep,format=("%m/%d/%y"))) #only works if I change the columns in Excel to date format...no clue why this is a thing
coarse_mesh_data_yr2$date_coll <- as.Date(strptime(coarse_mesh_data_yr2$date_coll,format=("%m/%d/%y"))) #same comment as above
#corrections based on Handling Loss
coarse_mesh_data_yr2$DM_start_handloss_g <- with(coarse_mesh_data_yr2, ifelse(rhodo_acer %in% "R",(DM_start_g-avg_handling_loss_rhodo_g), DM_start_g-avg_handling_loss_acer_g))
coarse_mesh_data_yr2$afdm_start <- with(coarse_mesh_data_yr2, ifelse(rhodo_acer %in% "R",(DM_start_handloss_g*corr_factor_rhodo_afdm_start), DM_start_handloss_g*corr_factor_acer_afdm_start))
#Get %AFDM remaining - first have to get the proportion of the sample that was AFDM, then apply this to the final dry mass, then divide this by the starting AFDM and multiply by 100
coarse_mesh_data_yr2$prop_sample_afdm <- 1-((coarse_mesh_data_yr2$tin_ash_g-coarse_mesh_data_yr2$tin_g)/(coarse_mesh_data_yr2$tin_DM_g-coarse_mesh_data_yr2$tin_g))
coarse_mesh_data_yr2$afdm_final <- coarse_mesh_data_yr2$prop_sample_afdm*coarse_mesh_data_yr2$DM_end_g
coarse_mesh_data_yr2$percent_afdm_rem_C <- 100*(coarse_mesh_data_yr2$afdm_final/coarse_mesh_data_yr2$afdm_start)
coarse_mesh_data_yr2$bag_n <- substring(coarse_mesh_data_yr2$bag_ID,2,5) #this is so I can merge coarse and fine by bag #
fine_mesh_data_yr2 <- read.csv("fine_SI_YR2_11Dec2020.csv")
fine_mesh_data_yr2$date_dep <- as.Date(strptime(fine_mesh_data_yr2$date_dep,format=("%m/%d/%y"))) #only works if I change the columns in Excel to date format...no clue why this is a thing
fine_mesh_data_yr2$date_coll <- as.Date(strptime(fine_mesh_data_yr2$date_coll,format=("%m/%d/%y"))) #same comment as above
fine_mesh_data_yr2$afdm_start <- with(fine_mesh_data_yr2, ifelse(rhodo_acer %in% "R",(DM_start_g*corr_factor_rhodo_afdm_start), DM_start_g*corr_factor_acer_afdm_start))
FB_sample_weights <- read.csv("FB _SI_YR2_Cummins_sample_weights_only_11Dec2020.csv")
FB_sample_weights <- FB_sample_weights[-c(441),] #remove random row of NAs in the FB data
colnames(FB_sample_weights)[colnames(FB_sample_weights)=="dm_g"]<-"DM_sub_g"
FB_sample_weights$date_dep <- as.Date(strptime(FB_sample_weights$date_dep,format=("%m/%d/%y")))#only works if I change the columns in Excel to date format...no clue why this is a thing
FB_sample_weights$date_coll <- as.Date(strptime(FB_sample_weights$date_coll,format=("%m/%d/%y")))#same comment as above
#subsetting by species -- mostly just to isolate the rhodo data
fine_mesh_data_yr2_rhodo <- fine_mesh_data_yr2[which(fine_mesh_data_yr2$rhodo_acer=="R"),]
fine_mesh_data_yr2_acer <- fine_mesh_data_yr2[which(fine_mesh_data_yr2$rhodo_acer=="A"),]
#creating the dataframe where I will do the calculations to get final AFDM for the rhodo samples
rhodo_FB_calcs <- merge(fine_mesh_data_yr2_rhodo, FB_sample_weights, by = c("bag_ID", "stream", "date_dep", "date_coll"))
rhodo_FB_calcs <- rhodo_FB_calcs[order(rhodo_FB_calcs[,3]),]
rhodo_FB_calcs$DM_leaves_final <- rhodo_FB_calcs$tin_DM_g-rhodo_FB_calcs$tin_g
rhodo_FB_calcs$afdm_leaves_final <- rhodo_FB_calcs$tin_DM_g-rhodo_FB_calcs$tin_ash_g
#calculation for percent of the DM that was AFDM for the leaves we weighed in the Rosemond lab
rhodo_FB_calcs$prop_sample_afdm <- rhodo_FB_calcs$afdm_leaves_final/rhodo_FB_calcs$DM_leaves_final
#getting a column for the AFDM of the subsample based on the column created in the previous line of code ("prop_sample_AFDM")
rhodo_FB_calcs$afdm_sub_final <- rhodo_FB_calcs$DM_sub_g*rhodo_FB_calcs$prop_sample_afdm
#Get final AFDM for the rhodo FM data
rhodo_FB_calcs$afdm_final <- ifelse(is.na(rhodo_FB_calcs$afdm_sub_final), rhodo_FB_calcs$afdm_leaves_final, (rhodo_FB_calcs$afdm_sub_final+rhodo_FB_calcs$afdm_leaves_final))
#Get percent AFDM rem for the rhodo FM data
rhodo_FB_calcs$percent_afdm_rem_F <- (100*(rhodo_FB_calcs$afdm_final/rhodo_FB_calcs$afdm_start))
#subset of rhodo_FB_calcs with only the necessary data
rhodo_FB_calcs_sub <- rhodo_FB_calcs[, c("bag_ID", "rhodo_acer", "date_dep", "date_coll", "stream", "percent_afdm_rem_F")]
#Get Acer AFDM final
fine_mesh_data_yr2_acer$afdm_final <- fine_mesh_data_yr2_acer$tin_DM_g-fine_mesh_data_yr2_acer$tin_ash_g
fine_mesh_data_yr2_acer$percent_afdm_rem_F <- (100*(fine_mesh_data_yr2_acer$afdm_final/fine_mesh_data_yr2_acer$afdm_start))
fine_mesh_data_yr2_acer_sub <- fine_mesh_data_yr2_acer
#merge acer data and rhodo data back together (fine_mesh_data_yr2_acer and rhodo_FB_calcs)
fine_mesh_data_yr2_final <- #cbind or rbind?
setwd("~/Documents/Dissertation etc./Data/Serial Incubations/Litter breakdown")
library(plyr)
library(dplyr)
handling_loss_data <- read.csv("handling_loss_SI_03Dec2020.csv")
handling_loss_data$mass_lost_g <- ((handling_loss_data$DM_start_g)-(handling_loss_data$DM_end_g))
handling_loss_data$percent_mass_lost <- (100*(handling_loss_data$mass_lost_g/handling_loss_data$DM_start_g))
handling_loss_data$prop_sample_afdm <- (1-(handling_loss_data$ash_g/handling_loss_data$subsample_g))
handling_loss_data$afdm <- (handling_loss_data$prop_sample_afdm*handling_loss_data$DM_end_g) #why do we apply this to the final DM and not the initial DM?
handling_loss_data_rhodo <- handling_loss_data[which(handling_loss_data$rhodo_acer=="R"),]
handling_loss_data_acer <- handling_loss_data[which(handling_loss_data$rhodo_acer=="A"),]
avg_handling_loss_rhodo_g <- mean(handling_loss_data_rhodo$mass_lost_g)
avg_handling_loss_acer_g <- mean(handling_loss_data_acer$mass_lost_g)
corr_factor_rhodo_afdm_start <- mean(handling_loss_data_rhodo$prop_sample_afdm)
corr_factor_acer_afdm_start <- mean(handling_loss_data_acer$prop_sample_afdm)
coarse_mesh_data_yr2 <- read.csv("coarse_SI_YR2_11Dec2020.csv")
coarse_mesh_data_yr2$date_dep <- as.Date(strptime(coarse_mesh_data_yr2$date_dep,format=("%m/%d/%y"))) #only works if I change the columns in Excel to date format...no clue why this is a thing
coarse_mesh_data_yr2$date_coll <- as.Date(strptime(coarse_mesh_data_yr2$date_coll,format=("%m/%d/%y"))) #same comment as above
#corrections based on Handling Loss
coarse_mesh_data_yr2$DM_start_handloss_g <- with(coarse_mesh_data_yr2, ifelse(rhodo_acer %in% "R",(DM_start_g-avg_handling_loss_rhodo_g), DM_start_g-avg_handling_loss_acer_g))
coarse_mesh_data_yr2$afdm_start <- with(coarse_mesh_data_yr2, ifelse(rhodo_acer %in% "R",(DM_start_handloss_g*corr_factor_rhodo_afdm_start), DM_start_handloss_g*corr_factor_acer_afdm_start))
#Get %AFDM remaining - first have to get the proportion of the sample that was AFDM, then apply this to the final dry mass, then divide this by the starting AFDM and multiply by 100
coarse_mesh_data_yr2$prop_sample_afdm <- 1-((coarse_mesh_data_yr2$tin_ash_g-coarse_mesh_data_yr2$tin_g)/(coarse_mesh_data_yr2$tin_DM_g-coarse_mesh_data_yr2$tin_g))
coarse_mesh_data_yr2$afdm_final <- coarse_mesh_data_yr2$prop_sample_afdm*coarse_mesh_data_yr2$DM_end_g
coarse_mesh_data_yr2$percent_afdm_rem_C <- 100*(coarse_mesh_data_yr2$afdm_final/coarse_mesh_data_yr2$afdm_start)
coarse_mesh_data_yr2$bag_n <- substring(coarse_mesh_data_yr2$bag_ID,2,5) #this is so I can merge coarse and fine by bag #
fine_mesh_data_yr2 <- read.csv("fine_SI_YR2_11Dec2020.csv")
fine_mesh_data_yr2$date_dep <- as.Date(strptime(fine_mesh_data_yr2$date_dep,format=("%m/%d/%y"))) #only works if I change the columns in Excel to date format...no clue why this is a thing
fine_mesh_data_yr2$date_coll <- as.Date(strptime(fine_mesh_data_yr2$date_coll,format=("%m/%d/%y"))) #same comment as above
fine_mesh_data_yr2$afdm_start <- with(fine_mesh_data_yr2, ifelse(rhodo_acer %in% "R",(DM_start_g*corr_factor_rhodo_afdm_start), DM_start_g*corr_factor_acer_afdm_start))
FB_sample_weights <- read.csv("FB _SI_YR2_Cummins_sample_weights_only_11Dec2020.csv")
FB_sample_weights <- FB_sample_weights[-c(441),] #remove random row of NAs in the FB data
colnames(FB_sample_weights)[colnames(FB_sample_weights)=="dm_g"]<-"DM_sub_g"
FB_sample_weights$date_dep <- as.Date(strptime(FB_sample_weights$date_dep,format=("%m/%d/%y")))#only works if I change the columns in Excel to date format...no clue why this is a thing
FB_sample_weights$date_coll <- as.Date(strptime(FB_sample_weights$date_coll,format=("%m/%d/%y")))#same comment as above
#subsetting by species -- mostly just to isolate the rhodo data
fine_mesh_data_yr2_rhodo <- fine_mesh_data_yr2[which(fine_mesh_data_yr2$rhodo_acer=="R"),]
fine_mesh_data_yr2_acer <- fine_mesh_data_yr2[which(fine_mesh_data_yr2$rhodo_acer=="A"),]
#creating the dataframe where I will do the calculations to get final AFDM for the rhodo samples
rhodo_FB_calcs <- merge(fine_mesh_data_yr2_rhodo, FB_sample_weights, by = c("bag_ID", "stream", "date_dep", "date_coll"))
rhodo_FB_calcs <- rhodo_FB_calcs[order(rhodo_FB_calcs[,3]),]
rhodo_FB_calcs$DM_leaves_final <- rhodo_FB_calcs$tin_DM_g-rhodo_FB_calcs$tin_g
rhodo_FB_calcs$afdm_leaves_final <- rhodo_FB_calcs$tin_DM_g-rhodo_FB_calcs$tin_ash_g
#calculation for percent of the DM that was AFDM for the leaves we weighed in the Rosemond lab
rhodo_FB_calcs$prop_sample_afdm <- rhodo_FB_calcs$afdm_leaves_final/rhodo_FB_calcs$DM_leaves_final
#getting a column for the AFDM of the subsample based on the column created in the previous line of code ("prop_sample_AFDM")
rhodo_FB_calcs$afdm_sub_final <- rhodo_FB_calcs$DM_sub_g*rhodo_FB_calcs$prop_sample_afdm
#Get final AFDM for the rhodo FM data
rhodo_FB_calcs$afdm_final <- ifelse(is.na(rhodo_FB_calcs$afdm_sub_final), rhodo_FB_calcs$afdm_leaves_final, (rhodo_FB_calcs$afdm_sub_final+rhodo_FB_calcs$afdm_leaves_final))
#Get percent AFDM rem for the rhodo FM data
rhodo_FB_calcs$percent_afdm_rem_F <- (100*(rhodo_FB_calcs$afdm_final/rhodo_FB_calcs$afdm_start))
#subset of rhodo_FB_calcs with only the necessary data
rhodo_FB_calcs_sub <- rhodo_FB_calcs[, c("bag_ID", "rhodo_acer", "date_dep", "date_coll", "stream", "percent_afdm_rem_F")]
#Get Acer AFDM final
fine_mesh_data_yr2_acer$afdm_final <- fine_mesh_data_yr2_acer$tin_DM_g-fine_mesh_data_yr2_acer$tin_ash_g
fine_mesh_data_yr2_acer$percent_afdm_rem_F <- (100*(fine_mesh_data_yr2_acer$afdm_final/fine_mesh_data_yr2_acer$afdm_start))
fine_mesh_data_yr2_acer_sub <- fine_mesh_data_yr2_acer
#merge acer data and rhodo data back together (fine_mesh_data_yr2_acer and rhodo_FB_calcs)
#fine_mesh_data_yr2_final <- #cbind or rbind?
fine_mesh_data_yr2_acer_sub <- fine_mesh_data_yr2_acer[, c("bag_ID", "rhodo_acer", "date_dep", "date_coll", "stream", "percent_afdm_rem_F")]
View(rhodo_FB_calcs_sub)
View(fine_mesh_data_yr2_acer_sub)
#merge acer data and rhodo data back together (fine_mesh_data_yr2_acer and rhodo_FB_calcs)
fine_mesh_data_yr2_final <- rbind(rhodo_FB_calcs_sub, fine_mesh_data_yr2_acer_sub)
View(fine_mesh_data_yr2_final)
fine_mesh_data_yr2_final <- fine_mesh_data_yr2_final[order(fine_mesh_data_yr2_final[,3]),]
fine_mesh_data_yr2_final$bag_n <- substring(fine_mesh_data_yr2_final$bag_ID,2,5) #this is so I can merge coarse and fine by bag #
View(fine_mesh_data_yr2_final)
setwd("~/Documents/Dissertation etc./Data/Serial Incubations/Litter breakdown")
library(plyr)
library(dplyr)
handling_loss_data <- read.csv("handling_loss_SI_03Dec2020.csv")
handling_loss_data$mass_lost_g <- ((handling_loss_data$DM_start_g)-(handling_loss_data$DM_end_g))
handling_loss_data$percent_mass_lost <- (100*(handling_loss_data$mass_lost_g/handling_loss_data$DM_start_g))
handling_loss_data$prop_sample_afdm <- (1-(handling_loss_data$ash_g/handling_loss_data$subsample_g))
handling_loss_data$afdm <- (handling_loss_data$prop_sample_afdm*handling_loss_data$DM_end_g) #why do we apply this to the final DM and not the initial DM?
handling_loss_data_rhodo <- handling_loss_data[which(handling_loss_data$rhodo_acer=="R"),]
handling_loss_data_acer <- handling_loss_data[which(handling_loss_data$rhodo_acer=="A"),]
avg_handling_loss_rhodo_g <- mean(handling_loss_data_rhodo$mass_lost_g)
avg_handling_loss_acer_g <- mean(handling_loss_data_acer$mass_lost_g)
corr_factor_rhodo_afdm_start <- mean(handling_loss_data_rhodo$prop_sample_afdm)
corr_factor_acer_afdm_start <- mean(handling_loss_data_acer$prop_sample_afdm)
coarse_mesh_data_yr2 <- read.csv("coarse_SI_YR2_11Dec2020.csv")
coarse_mesh_data_yr2$date_dep <- as.Date(strptime(coarse_mesh_data_yr2$date_dep,format=("%m/%d/%y"))) #only works if I change the columns in Excel to date format...no clue why this is a thing
coarse_mesh_data_yr2$date_coll <- as.Date(strptime(coarse_mesh_data_yr2$date_coll,format=("%m/%d/%y"))) #same comment as above
#corrections based on Handling Loss
coarse_mesh_data_yr2$DM_start_handloss_g <- with(coarse_mesh_data_yr2, ifelse(rhodo_acer %in% "R",(DM_start_g-avg_handling_loss_rhodo_g), DM_start_g-avg_handling_loss_acer_g))
coarse_mesh_data_yr2$afdm_start <- with(coarse_mesh_data_yr2, ifelse(rhodo_acer %in% "R",(DM_start_handloss_g*corr_factor_rhodo_afdm_start), DM_start_handloss_g*corr_factor_acer_afdm_start))
#Get %AFDM remaining - first have to get the proportion of the sample that was AFDM, then apply this to the final dry mass, then divide this by the starting AFDM and multiply by 100
coarse_mesh_data_yr2$prop_sample_afdm <- 1-((coarse_mesh_data_yr2$tin_ash_g-coarse_mesh_data_yr2$tin_g)/(coarse_mesh_data_yr2$tin_DM_g-coarse_mesh_data_yr2$tin_g))
coarse_mesh_data_yr2$afdm_final <- coarse_mesh_data_yr2$prop_sample_afdm*coarse_mesh_data_yr2$DM_end_g
coarse_mesh_data_yr2$percent_afdm_rem_C <- 100*(coarse_mesh_data_yr2$afdm_final/coarse_mesh_data_yr2$afdm_start)
coarse_mesh_data_yr2$bag_n <- substring(coarse_mesh_data_yr2$bag_ID,2,5) #this is so I can merge coarse and fine by bag #
fine_mesh_data_yr2 <- read.csv("fine_SI_YR2_11Dec2020.csv")
fine_mesh_data_yr2$date_dep <- as.Date(strptime(fine_mesh_data_yr2$date_dep,format=("%m/%d/%y"))) #only works if I change the columns in Excel to date format...no clue why this is a thing
fine_mesh_data_yr2$date_coll <- as.Date(strptime(fine_mesh_data_yr2$date_coll,format=("%m/%d/%y"))) #same comment as above
fine_mesh_data_yr2$afdm_start <- with(fine_mesh_data_yr2, ifelse(rhodo_acer %in% "R",(DM_start_g*corr_factor_rhodo_afdm_start), DM_start_g*corr_factor_acer_afdm_start))
FB_sample_weights <- read.csv("FB _SI_YR2_Cummins_sample_weights_only_11Dec2020.csv")
FB_sample_weights <- FB_sample_weights[-c(441),] #remove random row of NAs in the FB data
colnames(FB_sample_weights)[colnames(FB_sample_weights)=="dm_g"]<-"DM_sub_g"
FB_sample_weights$date_dep <- as.Date(strptime(FB_sample_weights$date_dep,format=("%m/%d/%y")))#only works if I change the columns in Excel to date format...no clue why this is a thing
FB_sample_weights$date_coll <- as.Date(strptime(FB_sample_weights$date_coll,format=("%m/%d/%y")))#same comment as above
#subsetting by species -- mostly just to isolate the rhodo data
fine_mesh_data_yr2_rhodo <- fine_mesh_data_yr2[which(fine_mesh_data_yr2$rhodo_acer=="R"),]
fine_mesh_data_yr2_acer <- fine_mesh_data_yr2[which(fine_mesh_data_yr2$rhodo_acer=="A"),]
#creating the dataframe where I will do the calculations to get final AFDM for the rhodo samples
rhodo_FB_calcs <- merge(fine_mesh_data_yr2_rhodo, FB_sample_weights, by = c("bag_ID", "stream", "date_dep", "date_coll"))
rhodo_FB_calcs <- rhodo_FB_calcs[order(rhodo_FB_calcs[,3]),]
rhodo_FB_calcs$DM_leaves_final <- rhodo_FB_calcs$tin_DM_g-rhodo_FB_calcs$tin_g
rhodo_FB_calcs$afdm_leaves_final <- rhodo_FB_calcs$tin_DM_g-rhodo_FB_calcs$tin_ash_g
#calculation for percent of the DM that was AFDM for the leaves we weighed in the Rosemond lab
rhodo_FB_calcs$prop_sample_afdm <- rhodo_FB_calcs$afdm_leaves_final/rhodo_FB_calcs$DM_leaves_final
#getting a column for the AFDM of the subsample based on the column created in the previous line of code ("prop_sample_AFDM")
rhodo_FB_calcs$afdm_sub_final <- rhodo_FB_calcs$DM_sub_g*rhodo_FB_calcs$prop_sample_afdm
#Get final AFDM for the rhodo FM data
rhodo_FB_calcs$afdm_final <- ifelse(is.na(rhodo_FB_calcs$afdm_sub_final), rhodo_FB_calcs$afdm_leaves_final, (rhodo_FB_calcs$afdm_sub_final+rhodo_FB_calcs$afdm_leaves_final))
#Get percent AFDM rem for the rhodo FM data
rhodo_FB_calcs$percent_afdm_rem_F <- (100*(rhodo_FB_calcs$afdm_final/rhodo_FB_calcs$afdm_start))
#subset of rhodo_FB_calcs with only the necessary data
rhodo_FB_calcs_sub <- rhodo_FB_calcs[, c("bag_ID", "rhodo_acer", "date_dep", "date_coll", "stream", "percent_afdm_rem_F")]
fine_mesh_data_yr2_acer$afdm_final <- fine_mesh_data_yr2_acer$tin_DM_g-fine_mesh_data_yr2_acer$tin_ash_g
fine_mesh_data_yr2_acer$percent_afdm_rem_F <- (100*(fine_mesh_data_yr2_acer$afdm_final/fine_mesh_data_yr2_acer$afdm_start))
fine_mesh_data_yr2_acer_sub <- fine_mesh_data_yr2_acer[, c("bag_ID", "rhodo_acer", "date_dep", "date_coll", "stream", "percent_afdm_rem_F")]
fine_mesh_data_yr2_final <- rbind(rhodo_FB_calcs_sub, fine_mesh_data_yr2_acer_sub)
fine_mesh_data_yr2_final <- fine_mesh_data_yr2_final[order(fine_mesh_data_yr2_final[,3]),]
fine_mesh_data_yr2_final$bag_n <- substring(fine_mesh_data_yr2_final$bag_ID,2,5) #this is so I can merge coarse and fine by bag #
#lots of NAs in this df. Also some verrrrrrry negative values -- replace negatives with NA? make sure NAs match between coarse and fine mesh dfs?
coarse_mesh_data_yr2_sub <- coarse_mesh_data_yr2[, c("bag_n", "rhodo_acer", "date_dep", "date_coll", "stream", "percent_afdm_rem_C")]
fine_mesh_data_yr2_sub <- fine_mesh_data_yr2_final[, c("bag_n", "rhodo_acer", "date_dep", "date_coll", "stream", "percent_afdm_rem_F")]
coarse_fine_data_yr2_all<-merge(coarse_mesh_data_yr2_sub,fine_mesh_data_yr2_sub, by=c("bag_n","rhodo_acer", "date_dep", "date_coll", "stream"))
coarse_fine_data_yr2_all <- coarse_fine_data_yr2_all[order(coarse_fine_data_yr2_all[,3]),]
View(coarse_fine_data_yr2_all)
coarse_fine_data_yr2_all$percent_afdm_rem_C<-as.character(coarse_fine_data_yr2_all$percent_afdm_rem_C)
coarse_fine_data_yr2_all$percent_afdm_rem_C<-as.numeric(coarse_fine_data_yr2_all$percent_afdm_rem_C)
coarse_fine_data_yr2_all$ln_percent_afdm_rem_C<-log(coarse_fine_data_yr2_all$percent_afdm_rem_C)
coarse_fine_data_yr2_all$percent_afdm_rem_F<-as.character(coarse_fine_data_yr2_all$percent_afdm_rem_F)
coarse_fine_data_yr2_all$percent_afdm_rem_F<-as.numeric(coarse_fine_data_yr2_all$percent_afdm_rem_F)
coarse_fine_data_yr2_all$ln_percent_afdm_rem_F<-log(coarse_fine_data_yr2_all$percent_afdm_rem_F)
coarse_fine_data_yr2_all$days_in_record<-as.numeric(coarse_fine_data_yr2_all$date_coll-coarse_fine_data_yr2_all$date_dep)
coarse_fine_data_yr2_all$ln_percent_afdm_start <- log(100)
#for some reason, I have to change everything to a character first and then to numeric for the k calculations...
coarse_fine_data_yr2_all$k_coarse<-as.character(((coarse_fine_data_yr2_all$ln_percent_afdm_start)-(coarse_fine_data_yr2_all$ln_percent_afdm_rem_C))/(0-coarse_fine_data_yr2_all$days_in_record))
coarse_fine_data_yr2_all$k_fine<-as.character(((coarse_fine_data_yr2_all$ln_percent_afdm_start)-(coarse_fine_data_yr2_all$ln_percent_afdm_rem_F))/(0-coarse_fine_data_yr2_all$days_in_record))
coarse_fine_data_yr2_all$k_coarse<-as.numeric(((coarse_fine_data_yr2_all$ln_percent_afdm_start)-(coarse_fine_data_yr2_all$ln_percent_afdm_rem_C))/(0-coarse_fine_data_yr2_all$days_in_record))
coarse_fine_data_yr2_all$k_fine<-as.numeric(((coarse_fine_data_yr2_all$ln_percent_afdm_start)-(coarse_fine_data_yr2_all$ln_percent_afdm_rem_F))/(0-coarse_fine_data_yr2_all$days_in_record))
coarse_fine_data_yr2_all$abs_val_k_coarse<-as.character(-((coarse_fine_data_yr2_all$ln_percent_afdm_start)-(coarse_fine_data_yr2_all$ln_percent_afdm_rem_C))/(0-coarse_fine_data_yr2_all$days_in_record))
coarse_fine_data_yr2_all$abs_val_k_fine<-as.character(-((coarse_fine_data_yr2_all$ln_percent_afdm_start)-(coarse_fine_data_yr2_all$ln_percent_afdm_rem_F))/(0-coarse_fine_data_yr2_all$days_in_record))
coarse_fine_data_yr2_all$abs_val_k_coarse<-as.numeric(-((coarse_fine_data_yr2_all$ln_percent_afdm_start)-(coarse_fine_data_yr2_all$ln_percent_afdm_rem_C))/(0-coarse_fine_data_yr2_all$days_in_record))
coarse_fine_data_yr2_all$abs_val_k_fine<-as.numeric(-((coarse_fine_data_yr2_all$ln_percent_afdm_start)-(coarse_fine_data_yr2_all$ln_percent_afdm_rem_F))/(0-coarse_fine_data_yr2_all$days_in_record))
View(coarse_fine_data_yr2_all)
coarse_fine_data_yr2_all$abs_val_k_shred<-as.numeric(coarse_fine_data_yr2_all$abs_val_k_coarse-coarse_fine_data_yr2_all$abs_val_k_fine)
coarse_fine_data_yr2_all$abs_val_k_shred[coarse_fine_data_yr2_all$abs_val_k_shred<0]<-NA
View(coarse_fine_data_yr2_all)
sum(is.na(coarse_fine_data_yr2_all$abs_val_k_shred))
sum(is.na(coarse_fine_data_yr2_all$abs_val_k_shred) & coarse_fine_data_yr2_all$rhodo_acer=="R")
> sum(is.na(coarse_fine_data_yr2_all$abs_val_k_shred) & coarse_fine_data_yr2_all$rhodo_acer=="A")
sum(is.na(coarse_fine_data_yr2_all$abs_val_k_shred) & coarse_fine_data_yr2_all$rhodo_acer=="A")
#Getting Deployment-Level Data from the weekly nutrient data - Serial Incubations - CSC 8 Dec 2020
#UPDATED 12 January 2021 with new landscape data files
#YEAR 2
#deployments csv
setwd("~/Documents/Dissertation etc./Data/Serial Incubations/Nutrients")
dates<-read.csv("SI_yr2_deployments.csv")
dates$date<-as.Date(strptime(dates$Start.Date,format=("%m/%d/%y")))
#read in the yr2 nutrients data
all_nuts_YR2<-read.csv("all_nutrients_master_CSC_SIYR2.csv", header = TRUE)
all_nuts_YR2$date<-as.Date(strptime(all_nuts_YR2$date,format=("%m/%d/%y"))) #for some reason this code only worked when I switched the "date" column in the original csv to a date format in Excel...
streams<-levels(as.factor(all_nuts_YR2$stream))
all<-data.frame()
for (i in 1:length(streams)){
stream<-streams[i]
data1<-all_nuts_YR2[all_nuts_YR2$stream==streams[i],]
for (j in 1:(length(dates$Start.Date)-2)){
start_date<-dates$date[j]
end_date<-dates$date[j+2]
subset_data_2<-data1[data1$date>=start_date,]
subset_data_1<-subset_data_2[subset_data_2$date<=end_date,]
mean_nh4.mgl<-mean(subset_data_1$nh4.mgl,na.rm=TRUE)
sd_nh4.mgl<-sd(subset_data_1$nh4.mgl,na.rm=TRUE)
N_nh4.mgl<-length(na.omit(subset_data_1$nh4.mgl))
mean_no3.mgl<-mean(subset_data_1$no3.mgl,na.rm=TRUE)
sd_no3.mgl<-sd(subset_data_1$no3.mgl,na.rm=TRUE)
N_no3.mgl<-length(na.omit(subset_data_1$no3.mgl))
mean_po4.mgl<-mean(subset_data_1$po4.mgl,na.rm=TRUE)
sd_po4.mgl<-sd(subset_data_1$po4.mgl,na.rm=TRUE)
N_po4.mgl<-length(na.omit(subset_data_1$po4.mgl))
mean_din.mgl<-mean(subset_data_1$din.mgl,na.rm=TRUE)
sd_din.mgl<-sd(subset_data_1$din.mgl,na.rm=TRUE)
N_din.mgl<-length(na.omit(subset_data_1$din.mgl))
returned_data<-data.frame(stream, end_date, mean_nh4.mgl, sd_nh4.mgl, N_nh4.mgl, mean_no3.mgl, sd_no3.mgl, N_no3.mgl, mean_po4.mgl, sd_po4.mgl, N_po4.mgl,
mean_din.mgl, sd_din.mgl, N_din.mgl, deployment=j)
all<-rbind(all,returned_data)
}
}
all_new<-all[complete.cases(all), ] #this gets rid of the 12th deployment that randomly shows up in "all" (there is no dep 12 for YR2...)
#####
#write a csv for deployment-level nutrients -- STILL NEED TO COME BACK TO THIS ONCE WE FIGURE OUT WHAT TO DO WITH NAS FOR PO4 -- UPDATED 12 January 2021, fixed NAs, data is complete now
write.csv(all_new, "~/Documents/Dissertation etc./Data/Serial Incubations/Nutrients//deployment_nuts_masterlong_SIyr2.csv")
